#!/bin/sh

exec 1>&2

file="$1"
bar='==============================================================================='
die() {
    printf '%s\n' "$bar"
    if [ $# -gt 0 ]; then
        printf 'ERROR: %s\n\n' "$*"
    fi
    printf 'Please edit the message and commit again.\n'
    abs_path=$(cd "$(dirname "$file")" && pwd || echo ".")/$(basename "$file")
    printf 'Your commit message has been saved in:\n'
    printf '  %s\n' "$abs_path"
    printf '%s\n' "$bar"
    exit 1
}

comment_char=$(git config core.commentChar)
echo "comment_char: ${comment_char}"
# shellcheck disable=SC1003
case "$comment_char" in
    $) comment_char='\$' ;;
    [) comment_char='\[' ;;
    .) comment_char='\.' ;;
    \\) comment_char='\\' ;;
esac
echo "comment_char: ${comment_char}"

cleaned=$(grep -v "^${comment_char}" "$file") ||
    die "Internal error: Could not filter out comment lines."
subject=$(echo "$cleaned" | head -n1)
num_chars=$(printf '%s' "$subject" | wc -c)
max_num_chars=80

if [ "$num_chars" -gt "$max_num_chars" ]; then
    die "The subject line should be ${max_num_chars} characters or less (found ${num_chars} characters)."
fi

if echo "$subject" | grep "\. *$" >/dev/null 2>&1; then
    die "The subject line should not end in a period."
fi

num_lines=$(echo "$cleaned" | wc -l)
line2=$(echo "$cleaned" | sed '2q;d')
if [ "$num_lines" -gt 1 ] && [ "$line2" != "" ]; then
    die "The subject and body should be separated by an empty line."
fi
